{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.default = ensureBuffer;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env: browser */\n\n/* global FileReader */\n\n/**\n * Ensures the provider buffer is, indeed, an ArrayBuffer; converts File and\n * Blob objects to ArrayBuffers.\n * @param {mixed} buffer\n * @returns {Promise<ArrayBuffer>}\n */\n\n\nfunction ensureBuffer(buffer) {\n  if (buffer instanceof ArrayBuffer) {\n    return _promise2.default.resolve(buffer);\n  }\n\n  if (buffer.toArrayBuffer) {\n    return _promise2.default.resolve(buffer.toArrayBuffer());\n  }\n\n  if (buffer.buffer) {\n    return _promise2.default.resolve(buffer.buffer);\n  }\n\n  return new _promise2.default(function (resolve, reject) {\n    var fr = new FileReader();\n\n    fr.onload = function onload() {\n      resolve(new Uint8Array(this.result));\n    };\n\n    fr.onerror = reject;\n    fr.readAsArrayBuffer(buffer);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}