{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _values = require('babel-runtime/core-js/object/values');\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _defineProperties = require('babel-runtime/core-js/object/define-properties');\n\nvar _defineProperties2 = _interopRequireDefault(_defineProperties);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _class, _temp;\n/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar _common = require('@webex/common');\n\nvar _httpErrorSubtypes = require('./http-error-subtypes');\n\nvar _httpErrorSubtypes2 = _interopRequireDefault(_httpErrorSubtypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Base HttpError class. Unlikely to be thrown directly, but handy for general\n * type comparison.\n */\n\n\nvar HttpError = (_temp = _class = function (_Exception) {\n  (0, _inherits3.default)(HttpError, _Exception);\n\n  function HttpError() {\n    (0, _classCallCheck3.default)(this, HttpError);\n    return (0, _possibleConstructorReturn3.default)(this, (HttpError.__proto__ || (0, _getPrototypeOf2.default)(HttpError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(HttpError, [{\n    key: 'parse',\n\n    /**\n     * Parses HttpResponse objects for useful information (status, headers, etc)\n     * as well as attempting to extract a useful error message.\n     * @param {HttpResponse} res\n     * @returns {string}\n     */\n\n    /**\n     * @example Extend via\n     * MyError extends HttpError {\n     *  static errorKeys = HttpError.errorKeys.concat([\n     *    `key1`,\n     *    `key2`\n     *  ])\n     * }\n     *\n     * @type {Array}\n     */\n    value: function parse(res) {\n      // complexity is high here because of all the default values below.\n\n      /* eslint complexity: [0] */\n      var body = res.body;\n      var message = void 0;\n\n      switch (typeof body === 'undefined' ? 'undefined' : (0, _typeof3.default)(body)) {\n        case 'string':\n          try {\n            body = JSON.parse(body);\n            message = this.parseObject(body);\n          } catch (err) {\n            message = body;\n          }\n\n          break;\n\n        case 'object':\n          message = this.parseObject(body);\n          break;\n\n        default:\n      }\n\n      if (!message) {\n        message = this.defaultMessage;\n      }\n\n      (0, _defineProperties2.default)(this, {\n        body: {\n          enumerable: false,\n          value: body\n        },\n        httpVersion: {\n          enumerable: false,\n          value: res.httpVersion\n        },\n        headers: {\n          enumerable: false,\n          value: res.headers || {}\n        },\n        rawHeaders: {\n          enumerable: false,\n          value: res.rawHeaders || []\n        },\n        trailers: {\n          enumerable: false,\n          value: res.trailers || {}\n        },\n        rawTrailers: {\n          enumerable: false,\n          value: res.rawTrailers || []\n        },\n        method: {\n          enumerable: false,\n          value: res.method\n        },\n        url: {\n          enumerable: false,\n          value: res.url\n        },\n        statusCode: {\n          enumerable: false,\n          value: res.statusCode\n        },\n        statusMessage: {\n          enumerable: false,\n          value: res.statusMessage\n        },\n        socket: {\n          enumerable: false,\n          value: res.socket\n        },\n        _res: {\n          enumerable: false,\n          value: res\n        }\n      });\n      return message;\n    }\n    /**\n     * Recursively parses an error body looking for a likely error candidate\n     * @param {object} body\n     * @returns {string}\n     */\n\n    /**\n     * Default error string if no error can be extracted from the http response\n     * @type {string}\n     */\n\n  }, {\n    key: 'parseObject',\n    value: function parseObject(body) {\n      // Search body for common names of error strings\n      var messages = (0, _values2.default)((0, _pick3.default)(body, HttpError.errorKeys)); // If no error candidate was found, stringify the entire body\n\n      if (messages.length === 0) {\n        return (0, _stringify2.default)(body, null, 2);\n      } // Assume the first key found was the error explanation\n\n\n      var message = messages[0]; // If the explanation is an object, recurse and try again\n\n      if ((typeof message === 'undefined' ? 'undefined' : (0, _typeof3.default)(message)) === 'object') {\n        return this.parseObject(message);\n      } // Return the first key\n\n\n      return message;\n    }\n  }]);\n  return HttpError;\n}(_common.Exception), _class.errorKeys = ['error', 'errorString', 'response', 'errorResponse', 'message', 'msg'], _class.defaultMessage = 'An error was received while trying to fulfill the request', _temp);\nexports.default = HttpError;\n(0, _httpErrorSubtypes2.default)(HttpError);\nHttpError.makeSubTypes = _httpErrorSubtypes2.default;","map":null,"metadata":{},"sourceType":"script"}