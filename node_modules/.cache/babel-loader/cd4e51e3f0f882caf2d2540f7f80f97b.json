{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _deleteProperty = require('babel-runtime/core-js/reflect/delete-property');\n\nvar _deleteProperty2 = _interopRequireDefault(_deleteProperty);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _weakMap = require('babel-runtime/core-js/weak-map');\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _common = require('@webex/common');\n\nvar _httpCore = require('@webex/http-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar strings = new _weakMap2.default();\n/**\n * @class\n */\n\nvar WebexUserAgentInterceptor = function (_Interceptor) {\n  (0, _inherits3.default)(WebexUserAgentInterceptor, _Interceptor);\n  /**\n   * @param {Object} [options={}]\n   * @param {WebexCore} [options.webex]\n   * @private\n   * @returns {WebexUserAgentInterceptor}\n   */\n\n  function WebexUserAgentInterceptor() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, WebexUserAgentInterceptor);\n    var appName = (0, _get3.default)(options, 'webex.config.appName');\n    var appVersion = (0, _get3.default)(options, 'webex.config.appVersion');\n    var libName = (0, _get3.default)(options, 'webex.webex', false) ? 'webex' : 'webex-js-sdk';\n    var libVersion = (0, _get3.default)(options, 'webex.version', 'development');\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (WebexUserAgentInterceptor.__proto__ || (0, _getPrototypeOf2.default)(WebexUserAgentInterceptor)).call(this, options));\n\n    if (appName && appVersion) {\n      strings.set(_this, appName + '/' + appVersion + ' (' + (_common.inBrowser ? 'web' : 'node') + ') ' + libName + '/' + libVersion);\n    } else {\n      strings.set(_this, libName + '/' + libVersion + ' (' + (_common.inBrowser ? 'web' : 'node') + ')');\n    }\n\n    return _this;\n  }\n  /**\n   * @returns {WebexUserAgentInterceptor}\n   */\n\n\n  (0, _createClass3.default)(WebexUserAgentInterceptor, [{\n    key: 'onRequest',\n\n    /**\n     * @see Interceptor#onRequest\n     * @param {Object} options\n     * @returns {Object}\n     */\n    value: function onRequest(options) {\n      options.headers = options.headers || {};\n\n      if (options.uri && (options.uri.includes(this.webex.config.credentials.samlUrl) || options.uri.includes(this.webex.config.credentials.tokenUrl) || options.uri.includes(this.webex.config.credentials.authorizeUrl))) {\n        return options;\n      }\n\n      if ('spark-user-agent' in options.headers) {\n        if (!options.headers['spark-user-agent']) {\n          (0, _deleteProperty2.default)(options.headers, 'spark-user-agent');\n        }\n\n        return options;\n      }\n\n      options.headers['spark-user-agent'] = strings.get(this);\n      return options;\n    }\n  }], [{\n    key: 'create',\n    value: function create() {\n      return new WebexUserAgentInterceptor({\n        webex: this\n      });\n    }\n  }]);\n  return WebexUserAgentInterceptor;\n}(_httpCore.Interceptor);\n\nexports.default = WebexUserAgentInterceptor;","map":null,"metadata":{},"sourceType":"script"}