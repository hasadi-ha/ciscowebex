{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.default = request;\n\nvar _request2 = require('./request');\n\nvar _request3 = _interopRequireDefault(_request2);\n\nvar _common = require('@webex/common');\n\nvar _events = require('events');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @param {Object} options\n * @returns {Promise}\n */\n\n\nfunction request(options) {\n  if (options.url) {\n    options.uri = options.url;\n    options.url = null;\n  }\n\n  options.headers = options.headers || {};\n\n  if (!_common.inBrowser && !options.headers['user-agent']) {\n    options.headers['user-agent'] = '@webex/http-core';\n  }\n\n  options.download = new _events.EventEmitter();\n  options.upload = new _events.EventEmitter();\n  return intercept(options.interceptors, 'Request').then(function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _request3.default.apply(undefined, [options].concat(args));\n  }).then(function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return intercept.apply(undefined, [options.interceptors.slice().reverse(), 'Response'].concat(args));\n  });\n  /**\n   * @param {Array} interceptors\n   * @param {string} key\n   * @param {Object} res\n   * @private\n   * @returns {Promise}\n   */\n\n  function intercept(interceptors, key, res) {\n    var successKey = 'on' + key;\n    var errorKey = 'on' + key + 'Error';\n    return interceptors.reduce(function (promise, interceptor) {\n      return promise.then(function (result) {\n        if (interceptor[successKey]) {\n          return interceptor[successKey](options, result);\n        }\n\n        return _promise2.default.resolve(result);\n      }, function (reason) {\n        if (interceptor[errorKey]) {\n          return interceptor[errorKey](options, reason);\n        }\n\n        return _promise2.default.reject(reason);\n      });\n    }, _promise2.default.resolve(res));\n  }\n}\n/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */","map":null,"metadata":{},"sourceType":"script"}