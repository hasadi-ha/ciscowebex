{"ast":null,"code":"/*!\n * deps/ciphermodes/gcm/helpers.js - AES-GCM Helper Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar Long = require(\"long\"),\n    fill = require(\"lodash.fill\"),\n    pack = require(\"../pack.js\");\n\nvar E1 = 0xe1000000,\n    E1B = 0xe1,\n    E1L = new Long(E1 >> 8);\n\nfunction generateLookup() {\n  var lookup = [];\n\n  for (var c = 0; c < 256; ++c) {\n    var v = 0;\n\n    for (var i = 7; i >= 0; --i) {\n      if ((c & 1 << i) !== 0) {\n        v ^= E1 >>> 7 - i;\n      }\n    }\n\n    lookup.push(v);\n  }\n\n  return lookup;\n}\n\nvar helpers = module.exports = {\n  // ### Constants\n  E1: E1,\n  E1B: E1B,\n  E1L: E1L,\n  LOOKUP: generateLookup(),\n  // ### Array Helpers\n  arrayCopy: function (src, srcPos, dest, destPos, length) {\n    // Start by checking for negatives since arrays in JS auto-expand\n    if (srcPos < 0 || destPos < 0 || length < 0) {\n      throw new TypeError(\"Invalid input.\");\n    }\n\n    if (dest instanceof Uint8Array) {\n      // Check for overflow if dest is a typed-array\n      if (destPos >= dest.length || destPos + length > dest.length) {\n        throw new TypeError(\"Invalid input.\");\n      }\n\n      if (srcPos !== 0 || length < src.length) {\n        if (src instanceof Uint8Array) {\n          src = src.subarray(srcPos, srcPos + length);\n        } else {\n          src = src.slice(srcPos, srcPos + length);\n        }\n      }\n\n      dest.set(src, destPos);\n    } else {\n      for (var i = 0; i < length; ++i) {\n        dest[destPos + i] = src[srcPos + i];\n      }\n    }\n  },\n  arrayEqual: function (a1, a2) {\n    a1 = a1 || [];\n    a2 = a2 || [];\n    var len = Math.min(a1.length, a2.length),\n        result = a1.length === a2.length;\n\n    for (var idx = 0; idx < len; idx++) {\n      result = result && \"undefined\" !== typeof a1[idx] && \"undefined\" !== typeof a2[idx] && a1[idx] === a2[idx];\n    }\n\n    return result;\n  },\n  // ### Conversions\n  asBytes: function (x, z) {\n    switch (arguments.length) {\n      case 1:\n        z = new Buffer(16);\n        z.fill(0);\n        pack.intToBigEndian(x, z, 0);\n        return z;\n\n      case 2:\n        pack.intToBigEndian(x, z, 0);\n        break;\n\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  asInts: function (x, z) {\n    switch (arguments.length) {\n      case 1:\n        z = [];\n        fill(z, 0, 0, 4);\n        pack.bigEndianToInt(x, 0, z);\n        return z;\n\n      case 2:\n        pack.bigEndianToInt(x, 0, z);\n        break;\n\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  oneAsInts: function () {\n    var tmp = [];\n\n    for (var c = 0; c < 4; ++c) {\n      tmp.push(1 << 31);\n    }\n\n    return tmp;\n  },\n  // ## Bit-wise\n  shiftRight: function (x, z) {\n    var b, c;\n\n    switch (arguments.length) {\n      case 1:\n        b = x[0];\n        x[0] = b >>> 1;\n        c = b << 31;\n        b = x[1];\n        x[1] = b >>> 1 | c;\n        c = b << 31;\n        b = x[2];\n        x[2] = b >>> 1 | c;\n        c = b << 31;\n        b = x[3];\n        x[3] = b >>> 1 | c;\n        return b << 31 & 0xffffffff;\n\n      case 2:\n        b = x[0];\n        z[0] = b >>> 1;\n        c = b << 31;\n        b = x[1];\n        z[1] = b >>> 1 | c;\n        c = b << 31;\n        b = x[2];\n        z[2] = b >>> 1 | c;\n        c = b << 31;\n        b = x[3];\n        z[3] = b >>> 1 | c;\n        return b << 31 & 0xffffffff;\n\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  shiftRightN: function (x, n, z) {\n    var nInv, b, c;\n\n    switch (arguments.length) {\n      case 2:\n        b = x[0];\n        nInv = 32 - n;\n        x[0] = b >>> n;\n        c = b << nInv;\n        b = x[1];\n        x[1] = b >>> n | c;\n        c = b << nInv;\n        b = x[2];\n        x[2] = b >>> n | c;\n        c = b << nInv;\n        b = x[3];\n        x[3] = b >>> n | c;\n        return b << nInv;\n\n      case 3:\n        b = x[0];\n        nInv = 32 - n;\n        z[0] = b >>> n;\n        c = b << nInv;\n        b = x[1];\n        z[1] = b >>> n | c;\n        c = b << nInv;\n        b = x[2];\n        z[2] = b >>> n | c;\n        c = b << nInv;\n        b = x[3];\n        z[3] = b >>> n | c;\n        return b << nInv;\n\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n  xor: function (x, y, z) {\n    switch (arguments.length) {\n      case 2:\n        x[0] ^= y[0];\n        x[1] ^= y[1];\n        x[2] ^= y[2];\n        x[3] ^= y[3];\n        break;\n\n      case 3:\n        z[0] = x[0] ^ y[0];\n        z[1] = x[1] ^ y[1];\n        z[2] = x[2] ^ y[2];\n        z[3] = x[3] ^ y[3];\n        break;\n\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n  multiply: function (x, y) {\n    var r0 = x.slice();\n    var r1 = [];\n\n    for (var i = 0; i < 4; ++i) {\n      var bits = y[i];\n\n      for (var j = 31; j >= 0; --j) {\n        if ((bits & 1 << j) !== 0) {\n          helpers.xor(r1, r0);\n        }\n\n        if (helpers.shiftRight(r0) !== 0) {\n          r0[0] ^= helpers.E1;\n        }\n      }\n    }\n\n    helpers.arrayCopy(r1, 0, x, 0, 4);\n  },\n  multiplyP: function (x, y) {\n    switch (arguments.length) {\n      case 1:\n        if (helpers.shiftRight(x) !== 0) {\n          x[0] ^= helpers.E1;\n        }\n\n        break;\n\n      case 2:\n        if (helpers.shiftRight(x, y) !== 0) {\n          y[0] ^= helpers.E1;\n        }\n\n        break;\n\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  multiplyP8: function (x, y) {\n    var c;\n\n    switch (arguments.length) {\n      case 1:\n        c = helpers.shiftRightN(x, 8);\n        x[0] ^= helpers.LOOKUP[c >>> 24];\n        break;\n\n      case 2:\n        c = helpers.shiftRightN(x, 8, y);\n        y[0] ^= helpers.LOOKUP[c >>> 24];\n        break;\n\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}