{"ast":null,"code":"/*!\n * util/algconfig.js - Functions for managing algorithm set options\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n}\n\nfunction makeRE(prefix, suffix) {\n  var parts = [];\n  parts.push(\"^\");\n\n  if (prefix) {\n    prefix = quoteRE(prefix);\n    parts.push(prefix);\n  }\n\n  if (suffix) {\n    parts.push(\".*?\");\n    suffix = quoteRE(suffix);\n    parts.push(suffix);\n  } else if (!prefix) {\n    parts.push(\".*\");\n  }\n\n  parts.push(\"$\");\n  return parts.join(\"\");\n}\n\nvar AlgConfig = function (algspec) {\n  if (!algspec) {\n    algspec = [];\n  } else if (\"string\" === typeof algspec) {\n    algspec = algspec.split(\" \");\n  }\n\n  var specAllowed = [],\n      specDisallowed = [];\n  var ptnAllowed = [],\n      ptnDisallowed = [];\n  var ptn = /^(\\!)?([^*]*)\\*([^*]*)$/,\n      fmt;\n  algspec.forEach(function (a) {\n    if (!a) {\n      return;\n    }\n\n    ptn.lastIndex = 0;\n    var parts = ptn.exec(a);\n\n    if (!parts) {\n      return;\n    }\n\n    fmt = \"(\" + makeRE(parts[2], parts[3]) + \")\";\n\n    if (!parts[1]) {\n      // allowed pattern\n      ptnAllowed.push(fmt);\n      specAllowed.push(parts[0]);\n    } else {\n      // diallowed pattern\n      ptnDisallowed.push(fmt);\n      specDisallowed.push(parts[0]);\n    }\n  });\n  ptnAllowed = ptnAllowed.length ? new RegExp(ptnAllowed.join(\"|\")) : null;\n  ptnDisallowed = ptnDisallowed.length ? new RegExp(ptnDisallowed.join(\"|\")) : null;\n\n  if (!specAllowed.length) {\n    specAllowed = [\"*\"];\n  }\n\n  Object.defineProperty(this, \"spec\", {\n    value: specAllowed.join(\" \") + \" \" + specDisallowed.join(\" \"),\n    enumerable: true\n  });\n  Object.defineProperty(this, \"match\", {\n    value: function (alg) {\n      var result = Boolean(alg);\n\n      if (result && ptnAllowed) {\n        ptnAllowed.lastIndex = 0;\n        result = ptnAllowed.test(alg);\n      }\n\n      if (result && ptnDisallowed) {\n        ptnDisallowed.lastIndex = 0;\n        result = !ptnDisallowed.test(alg);\n      }\n\n      return result;\n    }\n  });\n};\n\nmodule.exports = AlgConfig;","map":null,"metadata":{},"sourceType":"script"}