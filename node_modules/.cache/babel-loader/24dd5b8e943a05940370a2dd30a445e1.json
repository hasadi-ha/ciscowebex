{"ast":null,"code":"/**!\n * lib/request.js -- KMS (Generic) Request\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash.clone\"),\n    jose = require(\"node-jose\");\n\nfunction KMSRequest(body) {\n  var wrapped = \"\";\n  body = body && clone(body) || {};\n  Object.defineProperty(this, \"wrapped\", {\n    get: function () {\n      return wrapped;\n    },\n    set: function (w) {\n      wrapped = String(w || \"\");\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"body\", {\n    get: function () {\n      return body;\n    },\n    set: function (b) {\n      b = b && clone(b) || {}; // carry forward requestId\n\n      if (\"requestId\" in body) {\n        b.requestId = body.requestId;\n      } // carry forward uri\n\n\n      if (\"uri\" in body) {\n        b.uri = body.uri;\n      } // carry forward method\n\n\n      if (\"method\" in body) {\n        b.method = body.method;\n      } // clear any wrapped, then save\n\n\n      wrapped = \"\";\n      body = b;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"requestId\", {\n    get: function () {\n      return body.requestId || \"\";\n    },\n    set: function (id) {\n      if (!id) {\n        delete body.requestId;\n      } else {\n        body.requestId = id;\n      }\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"uri\", {\n    get: function () {\n      return body.uri || \"\";\n    },\n    set: function (uri) {\n      if (!uri) {\n        delete body.uri;\n      } else {\n        body.uri = uri;\n      }\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"method\", {\n    get: function () {\n      return body.method || \"\";\n    },\n    set: function (method) {\n      if (!method) {\n        delete body.method;\n      } else {\n        body.method = method;\n      }\n    },\n    enumerable: true\n  });\n}\n\nKMSRequest.prototype.wrap = function (ctx, opts) {\n  opts = opts || {}; // TODO: make this more configurable\n\n  var self = this,\n      promise; // set the requestId if not already set\n\n  if (!this.requestId || opts.requestId) {\n    this.requestId = opts.requestId || ctx.requestId();\n  }\n\n  var body = this.body;\n  body.client = ctx.clientInfo; // prepare the key\n\n  if (opts.serverKey) {\n    promise = jose.JWK.asKey(ctx.serverInfo.key);\n  } else {\n    promise = ctx.ephemeralKey.asKey();\n  }\n\n  promise = promise.then(function (jwk) {\n    var key = jwk;\n    var cfg = {\n      compact: true,\n      contentAlg: opts.contentAlg || \"A256GCM\"\n    };\n    var jwe = jose.JWE.createEncrypt(cfg, key);\n    return jwe.final(JSON.stringify(self.body), \"utf8\");\n  });\n  promise = promise.then(function (result) {\n    // save wrapped\n    self.wrapped = result;\n    return result;\n  });\n  return promise;\n};\n\nmodule.exports = KMSRequest;","map":null,"metadata":{},"sourceType":"script"}