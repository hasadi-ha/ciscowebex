{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromBase64url = fromBase64url;\nexports.toBase64Url = toBase64Url;\nexports.encode = encode;\nexports.decode = decode;\nexports.validate = validate;\n\nvar _urlsafeBase = require('urlsafe-base64');\n\nvar _urlsafeBase2 = _interopRequireDefault(_urlsafeBase);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Converts a string from a base64url-encoded string\n * @param {string} str\n * @returns {string}\n */\n\n\nfunction fromBase64url(str) {\n  return _urlsafeBase2.default.decode(str).toString();\n}\n/**\n * Converts a string to a base64url-encoded string. It also accepts a buffer\n * @param {string|buffer} str\n * @returns {string}\n */\n\n/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nfunction toBase64Url(str) {\n  var buffer = str;\n\n  if (!Buffer.isBuffer(buffer)) {\n    buffer = Buffer.from(buffer);\n  }\n\n  return _urlsafeBase2.default.encode(buffer);\n}\n/**\n * Converts a string to a base64url-encoded string. It also accepts a buffer\n * @param {string|buffer} str\n * @returns {string}\n */\n\n\nfunction encode(str) {\n  return toBase64Url(str);\n}\n/**\n * Converts a string from a base64url-encoded string\n * @param {string} str\n * @returns {string}\n */\n\n\nfunction decode(str) {\n  return fromBase64url(str);\n}\n/**\n * Indicates if the provided string is, in fact, a base64 string\n * @param {String} str\n * @returns {Boolean}\n */\n\n\nfunction validate(str) {\n  return _urlsafeBase2.default.validate(str);\n}\n\nexports.default = {\n  fromBase64url: fromBase64url,\n  toBase64Url: toBase64Url,\n  encode: encode,\n  decode: decode,\n  validate: validate\n};","map":null,"metadata":{},"sourceType":"script"}