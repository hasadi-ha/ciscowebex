{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _webexCore = require('@webex/webex-core');\n/**\n * @typedef {Object} TeamObject\n * @property {string} id - (server generated) Unique identifier for the team\n * @property {string} name - The name of the team\n * @property {isoDate} created - (server generated) The date and time that the\n * team was created\n */\n\n/**\n* @class\n */\n\n\nvar Teams = _webexCore.WebexPlugin.extend({\n  /**\n   * Create a new team.\n   * @instance\n   * @param {TeamObject} team\n   * @returns {Promise<TeamObject>}\n   * @memberof Teams\n   * @example\n   * webex.teams.create({name: 'Create Team Example'})\n   *   .then(function(team) {\n   *     var assert = require('assert');\n   *     assert(team.id);\n   *     assert(team.name);\n   *     assert(team.created);\n   *     return 'success';\n   *   });\n   *   // => success\n   */\n  create: function create(team) {\n    return this.request({\n      method: 'POST',\n      service: 'hydra',\n      resource: 'teams',\n      body: team\n    }).then(function (res) {\n      return res.body;\n    });\n  },\n\n  /**\n   * Returns a single team\n   * @instance\n   * @param {TeamObject|string} team\n   * @param {Object} options\n   * @returns {Promise<TeamObject>}\n   * @memberof Teams\n   * @example\n   * var team;\n   * webex.teams.create({name: 'Get Team Example'})\n   *   .then(function(r) {\n   *     team = r;\n   *     return webex.teams.get(team.id);\n   *   })\n   *   .then(function(team2) {\n   *     var assert = require('assert');\n   *     assert.equal(team2.id, team.id);\n   *     return 'success';\n   *   });\n   *   // => success\n   */\n  get: function get(team, options) {\n    var id = team.id || team;\n    return this.request({\n      service: 'hydra',\n      resource: 'teams/' + id,\n      qs: options\n    }).then(function (res) {\n      return res.body.items || res.body;\n    });\n  },\n\n  /**\n   * List teams.\n   * @instance\n   * @param {object} options\n   * @param {object} options.max Limit the maximum number of teams in the\n   * response.\n   * @returns {Promise<Page<TeamObject>>}\n   * @memberof Teams\n   * @example\n   * var createdRooms;\n   * Promise.all([\n   *   webex.teams.create({name: 'List Teams Example 1'}),\n   *   webex.teams.create({name: 'List Teams Example 2'}),\n   *   webex.teams.create({name: 'List Teams Example 3'})\n   * ])\n   *   .then(function(r) {\n   *     createdRooms = r;\n   *     return webex.teams.list({max: 3});\n   *   })\n   *   .then(function(teams) {\n   *     var assert = require('assert');\n   *     assert(teams.length === 3);\n   *     for (var i = 0; i < teams.items.length; i+= 1) {\n   *       assert(createdRooms.filter(function(room) {\n   *         return room.id === teams.items[i].id;\n   *       }).length === 1);\n   *     }\n   *     return 'success';\n   *   });\n   *   // => success\n   */\n  list: function list(options) {\n    var _this = this;\n\n    return this.request({\n      service: 'hydra',\n      resource: 'teams/',\n      qs: options\n    }).then(function (res) {\n      return new _webexCore.Page(res, _this.webex);\n    });\n  },\n\n  /**\n   * Update a team.\n   * @instance\n   * @param {TeamObject} team\n   * @returns {Promise<TeamObject>}\n   * @memberof Teams\n   * @example\n   * var teams;\n   * webex.teams.create({name: 'Update Team Example'})\n   *   .then(function(r) {\n   *     teams = r;\n   *     teams.name = 'Teams Example (Updated Title)';\n   *     return webex.teams.update(teams);\n   *   })\n   *   .then(function() {\n   *     return webex.teams.get(teams.id);\n   *   })\n   *   .then(function(teams) {\n   *     var assert = require('assert');\n   *     assert.equal(teams.name, 'Teams Example (Updated Title)');\n   *     return 'success';\n   *   });\n   *   // => success\n    */\n  update: function update(team) {\n    var id = team.id;\n    return this.request({\n      method: 'PUT',\n      service: 'hydra',\n      resource: 'teams/' + id,\n      body: team\n    }).then(function (res) {\n      return res.body;\n    });\n  },\n  version: '1.69.1'\n});\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nexports.default = Teams;","map":null,"metadata":{},"sourceType":"script"}