{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detect = undefined;\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.default = detect;\nexports.detectSync = detectSync;\n\nvar _fileType = require('file-type');\n\nvar _fileType2 = _interopRequireDefault(_fileType);\n\nvar _common = require('@webex/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Determine mimeType for the specified buffer;\n * @param {Buffer} buffer\n * @returns {Promise<string>}\n */\n\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nfunction detect(buffer) {\n  return new _promise2.default(function (resolve) {\n    resolve(detectSync(buffer));\n  });\n}\n\nexports.detect = detect;\n/**\n * Synchronous implementation of {@link detect}\n * @param {Buffer} buffer\n * @returns {string}\n */\n\nfunction detectSync(buffer) {\n  /* global Blob */\n  var b = buffer;\n\n  if (_common.inBrowser) {\n    if (buffer instanceof Blob) {\n      return buffer.type;\n    }\n\n    if (buffer instanceof ArrayBuffer) {\n      b = new Uint8Array(buffer);\n    } else if (!(buffer instanceof Uint8Array)) {\n      throw new Error('`detect` requires a buffer of type Blob, ArrayBuffer, or Uint8Array');\n    }\n  }\n\n  var type = (0, _fileType2.default)(b);\n\n  if (!type) {\n    return 'application/octet-stream';\n  }\n\n  return type.mime;\n}","map":null,"metadata":{},"sourceType":"script"}