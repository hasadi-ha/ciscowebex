{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Big Daddy\\\\Desktop\\\\poc_01\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ciscospark from 'ciscospark';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport SpaceWidget from './SpaceWidget.jsx';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      ready: false,\n      token: null\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n\n  componentDidMount() {\n    // this\n    //     .callBackendAPI()\n    //     .then(res => this.setState({data: res.express}))\n    //     .catch(err => console.log(err));\n    console.log(this.props);\n  } // callBackendAPI = async() => {\n  //     const response = await fetch('/express_backend');\n  //     const body = await response.json();\n  //     if (response.status !== 200) {\n  //         throw Error(body.message)\n  //     }\n  //     return body;\n  // }\n\n\n  handleOnClick() {\n    this.setState(prevState => ({\n      ready: !prevState.ready\n    }));\n    console.log(this.props.ready);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"wechat\",\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Big Daddy\\Desktop\\poc_01\\src\\App.js"],"names":["React","Component","ciscospark","Button","SpaceWidget","BrowserRouter","Router","Route","Link","App","constructor","props","state","data","ready","token","handleOnClick","bind","componentDidMount","console","log","setState","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,IAAxC,QAAmD,kBAAnD;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACxBS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAMA,SAAKC,aAAL,GAAqB,KAChBA,aADgB,CAEhBC,IAFgB,CAEX,IAFW,CAArB;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACH,GArBuB,CAuBxB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAK,EAAAA,aAAa,GAAG;AACZ,SAAKK,QAAL,CAAcC,SAAS,KAAK;AACxBR,MAAAA,KAAK,EAAE,CAACQ,SAAS,CAACR;AADM,KAAL,CAAvB;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWG,KAAvB;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,OAAO,EAAE,KAAKP,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAiBH;;AA1DuB;;AA4D5B,eAAeP,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ciscospark from 'ciscospark';\nimport {Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport SpaceWidget from './SpaceWidget.jsx';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            ready: false,\n            token: null\n        };\n\n        this.handleOnClick = this\n            .handleOnClick\n            .bind(this);\n    }\n\n    componentDidMount() {\n        // this\n        //     .callBackendAPI()\n        //     .then(res => this.setState({data: res.express}))\n        //     .catch(err => console.log(err));\n        console.log(this.props);\n    }\n\n    // callBackendAPI = async() => {\n    //     const response = await fetch('/express_backend');\n    //     const body = await response.json();\n\n    //     if (response.status !== 200) {\n    //         throw Error(body.message)\n    //     }\n    //     return body;\n    // }\n\n    handleOnClick() {\n        this.setState(prevState => ({\n            ready: !prevState.ready\n        }));\n        console.log(this.props.ready)\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Button\n                        type=\"primary\"\n                        shape=\"circle\"\n                        icon=\"wechat\"\n                        onClick={this.handleOnClick}/>\n                        {/* {this.state.ready && (\n                        <div>\n                            <SpaceWidget token={this.state.token}/>\n                        </div>\n                    )\n} */}\n                </Router>\n            </div>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}