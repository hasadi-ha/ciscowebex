{"ast":null,"code":"/*!\n * parse/compact.js - JOSE Compact Serialization Parser\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar jose = {\n  JWE: require(\"../jwe\"),\n  JWS: require(\"../jws\"),\n  util: require(\"../util\")\n};\n\nfunction parseCompact(input) {\n  var parts = input.split(\".\");\n  var type, op;\n\n  if (3 === parts.length) {\n    // JWS\n    type = \"JWS\";\n\n    op = function (ks, opts) {\n      return jose.JWS.createVerify(ks).verify(input, opts);\n    };\n  } else if (5 === parts.length) {\n    // JWE\n    type = \"JWE\";\n\n    op = function (ks, opts) {\n      return jose.JWE.createDecrypt(ks).decrypt(input, opts);\n    };\n  } else {\n    throw new TypeError(\"invalid jose serialization\");\n  } // parse header\n\n\n  var header;\n  header = jose.util.base64url.decode(parts[0], \"utf8\");\n  header = JSON.parse(header);\n  return {\n    type: type,\n    format: \"compact\",\n    input: input,\n    header: header,\n    perform: op\n  };\n}\n\nmodule.exports = parseCompact;","map":null,"metadata":{},"sourceType":"script"}