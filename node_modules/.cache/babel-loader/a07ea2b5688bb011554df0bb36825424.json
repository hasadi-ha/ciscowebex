{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _map = require('babel-runtime/core-js/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _weakMap = require('babel-runtime/core-js/weak-map');\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nexports.default = makeWebexStore;\n\nvar _ampersandEvents = require('ampersand-events');\n\nvar _ampersandEvents2 = _interopRequireDefault(_ampersandEvents);\n\nvar _common = require('@webex/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar bindings = new _weakMap2.default();\n/**\n * Makes a WebexStore for the specified type bound to the specified webex instance\n * @param {string} type\n * @param {ProxyWebex} webex\n * @private\n * @returns {WebexStore}\n */\n\nfunction makeWebexStore(type, webex) {\n  var _dec, _desc, _value, _class;\n  /**\n   * Lazy Key-Value Store Interface\n   */\n\n\n  var WebexStore = (_dec = (0, _common.oneFlight)({\n    keyFactory: function keyFactory(namespace) {\n      return namespace;\n    }\n  }), (_class = function () {\n    /**\n     * @param {Object} attrs\n     * @param {Object} options\n     * @returns {Store}\n     */\n    function WebexStore() {\n      (0, _classCallCheck3.default)(this, WebexStore);\n      webex.logger.debug('webex-store: constructing ' + type + 'Storage');\n      bindings.set(this, new _map2.default());\n    }\n    /**\n     * Provides easy access to the storage adapter identified in config.\n     * @returns {Object}\n     */\n\n\n    (0, _createClass3.default)(WebexStore, [{\n      key: 'clear',\n\n      /**\n       * Clears the store\n       * @returns {Promise}\n       */\n      value: function clear() {\n        var promises = [];\n        this.bindings.forEach(function (binding) {\n          promises.push(binding.clear());\n        });\n        return _promise2.default.all(promises);\n      }\n      /**\n       * Deletes the specified key from the store\n       * @param {string} namespace\n       * @param {string} key\n       * @returns {[type]}\n       */\n\n    }, {\n      key: 'del',\n      value: function del(namespace, key) {\n        webex.logger.debug('webex-store: removing ' + namespace + ':' + key);\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.del(key);\n        });\n      }\n      /**\n       * Retrieves the value specified by key from the store. Rejects with\n       * NotFoundError if no value can be found\n       * @param {string} namespace\n       * @param {string} key\n       * @returns {Promise}\n       */\n\n    }, {\n      key: 'get',\n      value: function get(namespace, key) {\n        webex.logger.debug('webex-store: retrieving ' + namespace + ':' + key);\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.get(key);\n        });\n      }\n      /**\n       * Writes a value to the store. Deletes the specified key from the store\n       * if passed `undefined`\n       * @param {string} namespace\n       * @param {string} key\n       * @param {any} value\n       * @returns {Promise} Resolves with value (to simplify write-through caching)\n       */\n\n    }, {\n      key: 'put',\n      value: function put(namespace, key, value) {\n        if (typeof value === 'undefined') {\n          return this.del(namespace, key);\n        }\n\n        webex.logger.debug('webex-store: setting ' + namespace + ':' + key);\n        return this._getBinding(namespace).then(function (binding) {\n          return binding.put(key, value.serialize ? value.serialize() : value);\n        }).then(function () {\n          return value;\n        });\n      }\n    }, {\n      key: '_getBinding',\n\n      /**\n       * Creates an interface bound to the specified namespace\n       * @param {string} namespace\n       * @private\n       * @returns {Promise}\n       */\n      // suppress doc warning because decorators confuse eslint\n      // eslint-disable-next-line require-jsdoc\n      value: function _getBinding(namespace) {\n        var _this = this;\n\n        return new _promise2.default(function (resolve) {\n          webex.logger.debug('storage: getting binding for `' + namespace + '`');\n\n          var binding = _this.bindings.get(namespace);\n\n          if (binding) {\n            webex.logger.debug('storage: found binding for `' + namespace + '`');\n            return resolve(binding);\n          }\n\n          return resolve(_this.adapter.bind(namespace, {\n            logger: webex.logger\n          }).then(function (_binding) {\n            webex.logger.debug('storage: made binding for `' + namespace + '`');\n\n            _this.bindings.set(namespace, _binding);\n\n            return _binding;\n          }));\n        });\n      }\n    }, {\n      key: 'adapter',\n      get: function get() {\n        return webex.config.storage[type + 'Adapter'];\n      }\n      /**\n       * @returns {WeakMap}\n       */\n\n    }, {\n      key: 'bindings',\n      get: function get() {\n        return bindings.get(this);\n      }\n    }]);\n    return WebexStore;\n  }(), _applyDecoratedDescriptor(_class.prototype, '_getBinding', [_dec], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_getBinding'), _class.prototype), _class));\n  (0, _assign2.default)(WebexStore.prototype, _ampersandEvents2.default);\n  return new WebexStore();\n}","map":null,"metadata":{},"sourceType":"script"}