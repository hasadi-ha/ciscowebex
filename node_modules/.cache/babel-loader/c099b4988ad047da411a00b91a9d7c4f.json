{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _deleteProperty = require('babel-runtime/core-js/reflect/delete-property');\n\nvar _deleteProperty2 = _interopRequireDefault(_deleteProperty);\n\nvar _map = require('babel-runtime/core-js/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _weakMap = require('babel-runtime/core-js/weak-map');\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nexports.default = evented;\n\nvar _common = require('@webex/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar data = new ((0, _common.make)(_weakMap2.default, _map2.default))();\n/**\n * Given a class property, this decorator changes it into a setter/getter pair;\n * the setter will trigger `change:${prop}` when invoked\n * @param {Object} target\n * @param {string} prop\n * @param {Object} descriptor\n * @returns {undefined}\n */\n\nfunction evented(target, prop, descriptor) {\n  var defaultValue = descriptor.initializer && descriptor.initializer();\n  (0, _deleteProperty2.default)(descriptor, 'value');\n  (0, _deleteProperty2.default)(descriptor, 'initializer');\n  (0, _deleteProperty2.default)(descriptor, 'writable');\n\n  descriptor.get = function get() {\n    var value = data.get(this, prop);\n\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n\n    return defaultValue;\n  };\n\n  descriptor.set = function set(value) {\n    var previous = this[prop];\n\n    if (previous !== value) {\n      data.set(this, prop, value);\n      this.trigger('change:' + prop, value, previous);\n      this.trigger('change');\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}