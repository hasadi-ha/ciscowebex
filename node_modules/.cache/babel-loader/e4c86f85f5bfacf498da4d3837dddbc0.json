{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _webexCore = require('@webex/webex-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class\n */\n\n\nvar AbstractUserUUIDRequestBatcher = _webexCore.Batcher.extend({\n  namespace: 'User',\n\n  /**\n   * @param {string} item\n   * @returns {Promise<Object>}\n   */\n  prepareItem: function prepareItem(item) {\n    return _promise2.default.resolve({\n      email: item\n    });\n  },\n\n  /**\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess: function handleHttpSuccess(res) {\n    var _this = this;\n\n    return _promise2.default.all((0, _keys2.default)(res.body).map(function (email) {\n      if (res.body[email] && res.body[email].id) {\n        return _this.handleItemSuccess(email, res.body[email]);\n      }\n\n      return _this.handleItemFailure(email, res.body[email]);\n    }));\n  },\n  handleItemFailure: function handleItemFailure(email, response) {\n    return this.getDeferredForResponse(email).then(function (defer) {\n      defer.reject(response);\n    });\n  },\n\n  /**\n   * @param {string} email\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess: function handleItemSuccess(email, response) {\n    return this.getDeferredForResponse(email).then(function (defer) {\n      defer.resolve(response);\n    });\n  },\n\n  /**\n   * @param {string} email\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest: function fingerprintRequest(email) {\n    return _promise2.default.resolve(email.email || email);\n  },\n\n  /**\n   * @param {string} email\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse: function fingerprintResponse(email) {\n    return _promise2.default.resolve(email);\n  }\n});\n/**\n * @class\n */\n\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar FakeUserUUIDRequestBatcher = AbstractUserUUIDRequestBatcher.extend({\n  /**\n   * @param {Object} payload\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest: function submitHttpRequest(payload) {\n    return this.webex.request({\n      method: 'POST',\n      service: 'conversation',\n      resource: '/users',\n      body: payload\n    });\n  }\n});\n/**\n * @class\n */\n\nvar RealUserUUIDRequestBatcher = AbstractUserUUIDRequestBatcher.extend({\n  /**\n   * @param {Object} payload\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest: function submitHttpRequest(payload) {\n    return this.webex.request({\n      method: 'POST',\n      service: 'conversation',\n      resource: '/users',\n      body: payload,\n      qs: {\n        shouldCreateUsers: true\n      }\n    });\n  }\n});\n/**\n * @class\n */\n\nvar UserUUIDBatcher = _webexCore.WebexPlugin.extend({\n  children: {\n    faker: FakeUserUUIDRequestBatcher,\n    creator: RealUserUUIDRequestBatcher\n  },\n\n  /**\n   * @param {Object} payload\n   * @returns {Promise<Object>}\n   */\n  request: function request(payload) {\n    return payload.create ? this.creator.request(payload.email) : this.faker.request(payload.email);\n  },\n  version: '1.69.1'\n});\n\nexports.default = UserUUIDBatcher;","map":null,"metadata":{},"sourceType":"script"}