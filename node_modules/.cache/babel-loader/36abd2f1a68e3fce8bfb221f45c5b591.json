{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureMyIdIsAvailable = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n/**\n * Stores SDK users info in the sdk object if it doesn't already exist\n * @param {object} webex - sdk object\n * @returns {Promise} - Returns a promise that user info will be available\n */\n\n\nvar ensureMyIdIsAvailable = exports.ensureMyIdIsAvailable = function () {\n  var _ref = (0, _asyncToGenerator3.default)(\n  /*#__PURE__*/\n  _regenerator2.default.mark(function _callee(webex) {\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!('me' in webex.internal)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt('return', _promise2.default.resolve());\n\n          case 2:\n            return _context.abrupt('return', webex.people.get('me').then(function (person) {\n              webex.internal.me = person;\n              return _promise2.default.resolve();\n            }));\n\n          case 3:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function ensureMyIdIsAvailable(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.createEventEnvelope = createEventEnvelope;\n\nvar _common = require('@webex/common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Creates a 'webhook' envelope to wrap Webex Teams events in\n * @param {object} webex - sdk object\n * @param {string} resource - resource to create an envelope for\n * @returns {object} - Returns a promise of an event envelope object\n */\n\n\nfunction createEventEnvelope(webex, resource) {\n  return ensureMyIdIsAvailable(webex).then(function () {\n    return _promise2.default.resolve({\n      createdBy: webex.internal.me.id,\n      orgId: webex.internal.me.orgId,\n      resource: resource,\n      // id -- webhook id concept does not correlate to SDK socket event\n      // name -- webhook name concept does not correlate to SDK socket event\n      // targetUrl -- targetUrl concept does not correlate to SDK socket event\n      // secret -- secret concept does not correlate to SDK socket event\n      ownedBy: _common.SDK_EVENT.EXTERNAL.OWNER.CREATOR,\n      status: _common.SDK_EVENT.EXTERNAL.STATUS.ACTIVE,\n      created: new Date().toISOString(),\n      data: {}\n    });\n  }).catch(function (e) {\n    _promise2.default.reject(new Error('Unable to get person info for ' + resource + ' event envelope: ' + e.message));\n  });\n}\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */","map":null,"metadata":{},"sourceType":"script"}