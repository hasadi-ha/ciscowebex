{"ast":null,"code":"/*!\n * algorithms/sha.js - Cryptographic Secure Hash Algorithms, versions 1 and 2\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\");\n\nfunction hashDigestFN(hash) {\n  var md = hash.replace(\"SHA-\", \"SHA\").toLowerCase();\n  var alg = {\n    name: hash\n  }; // ### Fallback Implementation -- uses forge\n\n  var fallback = function (pdata\n  /* props */\n  ) {\n    var digest = forge.md[md].create();\n    digest.update(pdata);\n    digest = digest.digest().native();\n    return Promise.resolve(digest);\n  }; // ### WebCryptoAPI Implementation\n\n\n  var webcrypto = function (pdata\n  /* props */\n  ) {\n    var promise;\n    promise = helpers.subtleCrypto.digest(alg, pdata);\n    promise = promise.then(function (result) {\n      result = new Buffer(result);\n      return result;\n    });\n    return promise;\n  }; // ### nodejs Implementation\n\n\n  var nodejs = function (pdata\n  /* props */\n  ) {\n    var digest = helpers.nodeCrypto.createHash(md);\n    digest.update(pdata);\n    return digest.digest();\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n} // Public API\n// * [name].digest\n\n\nvar sha = {};\n[\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"].forEach(function (name) {\n  sha[name] = {\n    digest: hashDigestFN(name)\n  };\n});\nmodule.exports = sha;","map":null,"metadata":{},"sourceType":"script"}