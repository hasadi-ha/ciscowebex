{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _webexCore = require('@webex/webex-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @class\n * @ignore\n */\n\n\nvar PersonUUIDRequestBatcher = _webexCore.Batcher.extend({\n  namespace: 'People',\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess: function handleHttpSuccess(res) {\n    var _this = this;\n\n    return _promise2.default.all(res.body.items.map(function (personResponse) {\n      return _this.handleItemSuccess(personResponse.id, personResponse);\n    }));\n  },\n  handleItemFailure: function handleItemFailure(email, response) {\n    return this.getDeferredForResponse(email).then(function (defer) {\n      defer.reject(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} email\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess: function handleItemSuccess(email, response) {\n    return this.getDeferredForResponse(email).then(function (defer) {\n      defer.resolve(response);\n    });\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} uuidOrHydraId\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest: function fingerprintRequest(uuidOrHydraId) {\n    var hydraId = this.webex.people.inferPersonIdFromUuid(uuidOrHydraId);\n    return _promise2.default.resolve(hydraId);\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {string} hydraId\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse: function fingerprintResponse(hydraId) {\n    return _promise2.default.resolve(hydraId);\n  },\n  prepareRequest: function prepareRequest(ids) {\n    return _promise2.default.resolve(ids.join());\n  },\n\n  /**\n   * @instance\n   * @memberof PersonUUIDRequestBatcher\n   * @param {Object} ids\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest: function submitHttpRequest(ids) {\n    return this.webex.request({\n      service: 'hydra',\n      resource: 'people/?id=' + ids + '&showAllTypes=' + this.config.showAllTypes\n    });\n  }\n});\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nexports.default = PersonUUIDRequestBatcher;","map":null,"metadata":{},"sourceType":"script"}