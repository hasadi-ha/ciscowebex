{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DryError = exports.KmsTimeoutError = exports.KmsError = undefined;\n\nvar _apply = require('babel-runtime/core-js/reflect/apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _defineProperties = require('babel-runtime/core-js/object/define-properties');\n\nvar _defineProperties2 = _interopRequireDefault(_defineProperties);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _class, _temp, _class2, _temp2;\n/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n\nvar _common = require('@webex/common');\n\nvar _webexCore = require('@webex/webex-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Error class for KMS errors\n */\n\n\nvar KmsError = exports.KmsError = (_temp = _class = function (_Exception) {\n  (0, _inherits3.default)(KmsError, _Exception);\n\n  function KmsError() {\n    (0, _classCallCheck3.default)(this, KmsError);\n    return (0, _possibleConstructorReturn3.default)(this, (KmsError.__proto__ || (0, _getPrototypeOf2.default)(KmsError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(KmsError, [{\n    key: 'parse',\n\n    /**\n     * @param {HttpResponse} body\n     * @returns {string}\n     */\n    value: function parse(body) {\n      body = body.body || body;\n      (0, _defineProperties2.default)(this, {\n        body: {\n          enumerable: false,\n          value: body\n        },\n        reason: {\n          enumerable: false,\n          value: body.reason\n        },\n        requestId: {\n          enumerable: false,\n          value: body.requestId\n        },\n        status: {\n          enumerable: false,\n          value: body.status\n        }\n      });\n      var message = typeof body === 'string' ? body : body.reason;\n\n      if (!message) {\n        message = this.constructor.defaultMessage;\n      }\n\n      if (body.status) {\n        message += '\\nKMS_RESPONSE_STATUS: ' + body.status;\n      }\n\n      if (body.requestId) {\n        message += '\\nKMS_REQUEST_ID: ' + body.requestId;\n      }\n\n      return message;\n    }\n  }]);\n  return KmsError;\n}(_common.Exception), _class.defaultMessage = 'An unknown error occurred while communicating with the kms. This implies we received an error response without a body.', _temp);\n/**\n * Thrown when an expected KMSResponse is not received in a timely manner\n */\n\nvar KmsTimeoutError = exports.KmsTimeoutError = function (_KmsError) {\n  (0, _inherits3.default)(KmsTimeoutError, _KmsError);\n\n  function KmsTimeoutError() {\n    (0, _classCallCheck3.default)(this, KmsTimeoutError);\n    return (0, _possibleConstructorReturn3.default)(this, (KmsTimeoutError.__proto__ || (0, _getPrototypeOf2.default)(KmsTimeoutError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(KmsTimeoutError, [{\n    key: 'parse',\n\n    /**\n     * @param {KmsRequest} options.request\n     * @param {KmsRequest} options.timeout\n     * @returns {string}\n     */\n    value: function parse() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$request = _ref.request,\n          request = _ref$request === undefined ? {} : _ref$request,\n          timeout = _ref.timeout;\n\n      var message = 'The KMS did not respond within ' + (timeout ? timeout + ' milliseconds' : 'a timely fashion');\n\n      if (request) {\n        if (request.method && request.uri) {\n          message += '\\nKMS_REQUEST: ' + request.method + ' ' + request.uri;\n        }\n\n        if (request.requestId) {\n          message += '\\nKMS_REQUEST_ID: ' + request.requestId;\n        }\n      }\n\n      return message;\n    }\n  }]);\n  return KmsTimeoutError;\n}(KmsError);\n/**\n * Emitted when a REST request includes an encrypter error\n */\n\n\nvar DryError = exports.DryError = (_temp2 = _class2 = function (_WebexHttpError) {\n  (0, _inherits3.default)(DryError, _WebexHttpError);\n\n  function DryError() {\n    (0, _classCallCheck3.default)(this, DryError);\n    return (0, _possibleConstructorReturn3.default)(this, (DryError.__proto__ || (0, _getPrototypeOf2.default)(DryError)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(DryError, [{\n    key: 'parse',\n\n    /**\n     * @param {WebexHttpError} reason\n     * @returns {string}\n     */\n    value: function parse(reason) {\n      (0, _apply2.default)(_webexCore.WebexHttpError.prototype.parse, this, [reason._res]);\n      var body = reason._res.body.message;\n      var message = body.reason || body;\n\n      if (!message) {\n        message = this.constructor.defaultMessage;\n      }\n\n      if (this.options.url) {\n        message += '\\n' + this.options.method + ' ' + this.options.url;\n      } else if (this.options.uri) {\n        message += '\\n' + this.options.method + ' ' + this.options.uri;\n      } else {\n        message += '\\n' + this.options.method + ' ' + this.options.service.toUpperCase() + '/' + this.options.resource;\n      }\n\n      message += '\\nWEBEX_TRACKING_ID: ' + this.options.headers.trackingid;\n\n      if (body.status) {\n        message += '\\nKMS_RESPONSE_STATUS: ' + body.status;\n      }\n\n      if (body.requestId) {\n        message += '\\nKMS_REQUEST_ID: ' + body.requestId;\n      }\n\n      (0, _defineProperties2.default)(this, {\n        reason: {\n          enumerable: false,\n          value: body.reason\n        },\n        requestId: {\n          enumerable: false,\n          value: body.requestId\n        },\n        status: {\n          enumerable: false,\n          value: body.status\n        }\n      });\n      return message;\n    }\n  }]);\n  return DryError;\n}(_webexCore.WebexHttpError), _class2.defaultMessage = 'An unknown error was received from a service that proxies to the KMS', _temp2);","map":null,"metadata":{},"sourceType":"script"}