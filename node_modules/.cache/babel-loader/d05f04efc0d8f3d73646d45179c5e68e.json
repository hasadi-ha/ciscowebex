{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _deleteProperty = require('babel-runtime/core-js/reflect/delete-property');\n\nvar _deleteProperty2 = _interopRequireDefault(_deleteProperty);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _defaults2 = require('lodash/defaults');\n\nvar _defaults3 = _interopRequireDefault(_defaults2);\n\nexports.default = _request;\n\nvar _qs = require('qs');\n\nvar _qs2 = _interopRequireDefault(_qs);\n\nvar _xhr = require('../lib/xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _detect = require('../lib/detect');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name request\n * @param {Object} options\n * @returns {Promise}\n */\n\n\nfunction _request(options) {\n  return new _promise2.default(function (resolve) {\n    var params = (0, _pick3.default)(options, 'method', 'uri', 'withCredentials', 'headers', 'timeout', 'responseType'); // Set `response` to `true` to approximate an `HttpResponse` object\n\n    params.response = true;\n    bindProgressEvents(params, options);\n    setAuth(params, options);\n    setCookies(params, options);\n    setDefaults(params, options);\n    setResponseType(params, options);\n    setContentType(params, options);\n    setPayload(params, options);\n    setQs(params, options);\n    var x = (0, _xhr2.default)(params, function (error, response) {\n      /* istanbul ignore next */\n      if (error) {\n        options.logger.warn(error);\n      }\n      /* istanbul ignore else */\n\n\n      if (response) {\n        response.options = options;\n        processResponseJson(response, params);\n        resolve(response);\n      } else {\n        resolve({\n          statusCode: 0,\n          options: options,\n          headers: options.headers,\n          method: options.method,\n          url: options.uri,\n          body: error\n        });\n      }\n    });\n    x.onprogress = options.download.emit.bind(options.download, 'progress');\n  }).catch(function (error) {\n    /* eslint arrow-body-style: [0] */\n\n    /* istanbul ignore next */\n    return {\n      statusCode: 0,\n      options: options,\n      headers: options.headers,\n      method: options.method,\n      url: options.uri,\n      body: error\n    };\n  });\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n  function bindProgressEvents(params, o) {\n    if (params.method && ['PATCH', 'POST', 'PUT'].includes(params.method.toUpperCase())) {\n      params.xhr = new XMLHttpRequest();\n      params.xhr.upload.onprogress = o.upload.emit.bind(o.upload, 'progress');\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setAuth(params, o) {\n    if (o.auth) {\n      if (o.auth.bearer) {\n        params.headers.authorization = 'Bearer ' + o.auth.bearer;\n      } else {\n        var user = o.auth.user || o.auth.username;\n        var pass = o.auth.pass || o.auth.password;\n        var token = btoa(user + ':' + pass);\n        params.headers.authorization = 'Basic ' + token;\n      }\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setCookies(params, o) {\n    if (o.jar) {\n      params.withCredentials = true;\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setDefaults(params, o) {\n    var defs = {\n      cors: true,\n      // raynos/xhr defaults withCredentials to true if cors is true, so we need\n      // to make it explicitly false by default\n      withCredentials: false,\n      timeout: 0\n    };\n    (0, _defaults3.default)(params, (0, _pick3.default)(o, (0, _keys2.default)(defs)), defs);\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setResponseType(params, o) {\n    if (o.responseType === 'buffer') {\n      params.responseType = 'arraybuffer';\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setContentType(params, o) {\n    if (o.body instanceof Blob || o.body instanceof ArrayBuffer) {\n      o.json = params.json = false;\n      params.headers['content-type'] = params.headers['content-type'] || (0, _detect.detectSync)(o.body);\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setQs(params, o) {\n    if (o.qs) {\n      params.uri += '?' + _qs2.default.stringify(o.qs);\n    }\n  }\n  /**\n   * Converts arraybuffers to blobs before uploading them\n   * @param {mixed} file\n   * @private\n   * @returns {mixed}\n   */\n\n\n  function ensureBlob(file) {\n    if (file instanceof ArrayBuffer) {\n      var ret = file.type ? new Blob([file], {\n        type: file.type\n      }) : new Blob([file]);\n      ret.filename = file.filename || file.name || 'untitled';\n      return ret;\n    }\n\n    return file;\n  }\n  /**\n   * Appends an item to a form\n   * @param {FormData} form\n   * @param {string} key\n   * @param {mixed} value\n   * @returns {undefined}\n   */\n\n\n  function append(form, key, value) {\n    if ((0, _isArray3.default)(value)) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (0, _getIterator3.default)(value), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var v = _step.value;\n          append(form, key, v);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return;\n    }\n\n    value = ensureBlob(value);\n\n    if (value.name) {\n      value.filename = value.name;\n      form.append(key, value, value.name);\n    } else {\n      form.append(key, value);\n    }\n  }\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function setPayload(params, o) {\n    if ((!('json' in o) || o.json === true) && o.body) {\n      params.json = o.body;\n    } else if (o.form) {\n      params.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      params.body = _qs2.default.stringify(o.form);\n      (0, _deleteProperty2.default)(params, 'json');\n    } else if (o.formData) {\n      params.body = (0, _keys2.default)(o.formData).reduce(function (fd, key) {\n        var value = o.formData[key];\n        append(fd, key, value);\n        return fd;\n      }, new FormData());\n    } else {\n      params.body = o.body;\n      (0, _deleteProperty2.default)(params, 'json');\n    }\n  }\n  /**\n   * @param {Object} response\n   * @param {Object} params\n   * @private\n   * @returns {undefined}\n   */\n\n\n  function processResponseJson(response, params) {\n    // If params.json is not defined, xhr won't deserialize the response\n    // so we should give it a shot just in case.\n    if (!params.json && (0, _typeof3.default)(response.body) !== 'object') {\n      try {\n        response.body = JSON.parse(response.body);\n      } catch (e) {\n        /* eslint no-empty: [0] */\n      }\n    }\n  }\n}\n/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n// Note: several code paths are ignored in this file. As far as I can tell, any\n// error conditions that would provoke those paths are otherwise prevented and\n// reported.","map":null,"metadata":{},"sourceType":"script"}